"Hello world sample, please remove"
type HelloWorldmsnamecamel{
  "text"
  sn: String!  
}

"key value object"
type DeviceManagerKeyValue{
  "Item key"
  key: String
  "Item value"
  value: String
}

"Configuration TAG"
type DeviceManagerTag{
  "Tag name"
  name: String
  "Tag type"
  type: String
  "Tag attributes"
  attributes: [DeviceManagerKeyValue]
}

type DeviceManagerCommandResponse{
  "Response code"
  code: Int
  "Response message"
  message: String
}

input BasicInfoTag {
  "Tag name"
  name: String
  "Tag type"
  type: String
}

"Tag's attribute"
input TagAttribute {
  "attribute name"
  key: String
  "attribute value"
  value: String
}

type Query {
  "Hello world sample, please remove"
  getHelloWorldFrommsnamecamel: HelloWorldmsnamecamel
  # "return Tags Array using paginator methods"
  getTags(page: Int!, count: Int! ): [DeviceManagerTag]
  "get all Tag types"
  deviceManagerGetTagTypes: [String]
}

type Subscription {
  "Hello world sample, please remove"
  msnamecamelHelloWorldSubscription: HelloWorldmsnamecamel  
}

type Mutation{
  "Create or update new tag"
  persistBasicInfoTag(input: BasicInfoTag): DeviceManagerCommandResponse
  "Delete a tag registry"
  deviceManagerDeleteTag(tagName: String):DeviceManagerCommandResponse
  "Add an attribute to Tag"
  deviceManagerAddAttributeToTag( tagName: String!, input: TagAttribute): DeviceManagerCommandResponse
  "Delete an attribute from a tag"
  deviceManagerDeleteTagAttribute(tagName: String!, tagAttributeName: String!): DeviceManagerCommandResponse
}